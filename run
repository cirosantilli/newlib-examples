#!/usr/bin/env bash
. "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/common"
debug=false
debug_vm=
gem5_flags=
host=false
OPTIND=1
while getopts a:DdG:ght OPT; do
  case "$OPT" in
    a)
      common_arch="$OPTARG"
      ;;
    D)
      debug_vm="gdb -q -ex start -args \\
"
      ;;
    d)
      debug=true
      ;;
    G)
      gem5_flags="$OPTARG"
      ;;
    g)
      common_gem5=true
      ;;
    h)
      host=true
      ;;
    t)
      common_gem5_build_type="$OPTARG"
      ;;
    ?)
      exit 2
      ;;
  esac
done
shift "$(($OPTIND - 1))"
common_setup
root_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if "$common_gem5"; then
  cmd="\
${debug_vm} \
'${common_gem5_exec}' \\
-d '${common_gem5_m5out_dir}' \\
--debug-file=trace.txt \\
${gem5_flags} \\
'${common_gem5_dir}/configs/example/fs.py' \\
--bare-metal \\
--disk-image='${common_gem5_fake_iso}' \\
--kernel='${common_elf}' \\
--machine-type=VExpress_GEM5_V1 \\
--mem-size=${common_memory}B \\
"
else
  if "$debug"; then
    debug_flags="-S -gdb tcp::${common_gdb_port} \\
"
  else
    debug_flags=
  fi
  if "$host"; then
    qemu_exec="$common_qemu_exec_basename"
  else
    qemu_exec="$common_qemu_exec"
  fi
  cmd="\
${debug_vm} \
'${qemu_exec}' \\
-M '${common_qemu_machine}' \\
-cpu '${common_mcpu}' \\
-kernel '${common_elf}' \\
-nographic \\
-serial mon:stdio \\
-m ${common_memory} \\
${debug_flags} \
"
fi
cmd="${cmd} $@"
echo "$cmd"
eval "$cmd"
